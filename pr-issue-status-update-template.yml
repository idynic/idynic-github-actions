name: PR Issue Status Update

on:
  pull_request:
    types: [opened, synchronize, ready_for_review, closed]

permissions:
  issues: write
  pull-requests: read

jobs:
  update-linked-issue:
    runs-on: ubuntu-latest
    steps:
      # Check out the current repository first
      - name: Checkout repository
        uses: actions/checkout@v4

      # Then check out the GitHub Actions repository
      - name: Checkout GitHub Actions
        uses: actions/checkout@v4
        with:
          repository: idynic/idynic-github-actions
          path: .github/actions/idynic-github-actions
          token: ${{ secrets.PROJECT_TOKEN }}

      # Extract issue number from PR and determine status update strategy
      - name: Extract issue reference
        id: extract-issue
        uses: ./.github/actions/idynic-github-actions/extract-issue-reference
        with:
          pr-title: ${{ github.event.pull_request.title }}
          pr-body: ${{ github.event.pull_request.body }}
          pr-branch: ${{ github.event.pull_request.head.ref }}
          pr-action: ${{ github.event.action }}
          check-update-status-tag: "true"

      # Update issue status if needed
      - name: Update issue status
        if: steps.extract-issue.outputs.should-update-status == 'true'
        uses: ./.github/actions/idynic-github-actions/update-issue-status
        with:
          issue-number: ${{ steps.extract-issue.outputs.issue-number }}
          status: ${{ steps.extract-issue.outputs.update-status }}
          token: ${{ secrets.PROJECT_TOKEN }}
          organization: ${{ github.repository_owner }}

      # Add appropriate comment to issue
      - name: Add PR opened comment
        if: steps.extract-issue.outputs.should-comment == 'true' && steps.extract-issue.outputs.comment-type == 'opened'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ steps.extract-issue.outputs.issue-number }},
              body: `ðŸ“‹ Pull Request #${{ github.event.pull_request.number }} opened for this issue: ${{ github.event.pull_request.html_url }}\n\nâœ… Issue status updated to: **Waiting for Review**`
            });

      - name: Add review ready comment
        if: steps.extract-issue.outputs.should-comment == 'true' && steps.extract-issue.outputs.comment-type == 'ready'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ steps.extract-issue.outputs.issue-number }},
              body: `ðŸ“‹ Pull Request #${{ github.event.pull_request.number }} is ready for review: ${{ github.event.pull_request.html_url }}\n\nâœ… Issue status updated to: **Waiting for Review**`
            });
            
      - name: Add status update comment
        if: steps.extract-issue.outputs.should-comment == 'true' && steps.extract-issue.outputs.comment-type == 'sync'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ steps.extract-issue.outputs.issue-number }},
              body: `ðŸ”„ PR #${{ github.event.pull_request.number }} updated with new commits: ${{ github.event.pull_request.html_url }}\n\nâœ… Issue status updated to: **Waiting for Review**`
            });

      - name: Add merged comment
        if: steps.extract-issue.outputs.should-comment == 'true' && steps.extract-issue.outputs.comment-type == 'merged'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ steps.extract-issue.outputs.issue-number }},
              body: `ðŸŽ‰ Pull Request #${{ github.event.pull_request.number }} has been merged!\n\nâœ… Issue status updated to: **Done**`
            });
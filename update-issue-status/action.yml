name: 'Update Issue Status'
description: 'Update GitHub issue status by adding a comment'
inputs:
  issue-number:
    description: 'The issue number to update'
    required: true
  status:
    description: 'The new status to set (e.g. "In Progress", "Done")'
    required: true
  token:
    description: 'GitHub token with repo permissions'
    required: true
  pr-url:
    description: 'URL of the related pull request'
    required: false
    default: ''
  pr-number:
    description: 'Number of the related pull request'
    required: false
    default: ''
  message-type:
    description: 'Type of message (opened, ready, merged)'
    required: false
    default: 'updated'

runs:
  using: 'composite'
  steps:
    - name: Add comment to issue
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
      run: |
        # Debug inputs
        echo "Debug: issue-number = ${{ inputs.issue-number }}"
        echo "Debug: status = ${{ inputs.status }}"
        echo "Debug: pr-number = ${{ inputs.pr-number }}"
        echo "Debug: pr-url = ${{ inputs.pr-url }}"
        echo "Debug: message-type = ${{ inputs.message-type }}"
        
        # Determine appropriate emoji and message based on message type
        if [ "${{ inputs.message-type }}" == "opened" ]; then
          EMOJI="ðŸ“‹"
          ACTION="opened"
        elif [ "${{ inputs.message-type }}" == "ready" ]; then
          EMOJI="ðŸ“‹"
          ACTION="is ready for review"
        elif [ "${{ inputs.message-type }}" == "merged" ]; then
          EMOJI="ðŸŽ‰"
          ACTION="has been merged"
        else
          EMOJI="ðŸ”„"
          ACTION="has been updated"
        fi
        
        # Format PR reference
        if [ -n "${{ inputs.pr-url }}" ] && [ -n "${{ inputs.pr-number }}" ]; then
          PR_REF="PR #${{ inputs.pr-number }} ${ACTION}: ${{ inputs.pr-url }}"
        elif [ -n "${{ inputs.pr-number }}" ]; then
          PR_REF="PR #${{ inputs.pr-number }} ${ACTION}"
        else
          PR_REF="Status updated"
        fi
        
        # Create comment message
        MESSAGE="${EMOJI} ${PR_REF}\n\nâœ… Status updated to: **${{ inputs.status }}**"
        
        echo "Debug: Using issue number: ${{ inputs.issue-number }}"
        echo "Debug: MESSAGE = ${MESSAGE}"
        
        # Use GitHub CLI to add comment if available
        if command -v gh &> /dev/null; then
          echo "Debug: Using GitHub CLI to add comment"
          ISSUE_NUMBER="${{ inputs.issue-number }}"
          echo "Debug: ISSUE_NUMBER = ${ISSUE_NUMBER}"
          
          if [ -z "${ISSUE_NUMBER}" ]; then
            echo "Error: Missing issue number, cannot add comment"
            exit 1
          fi
          
          echo "Debug: Running: gh issue comment ${ISSUE_NUMBER} --body \"${MESSAGE}\""
          if ! gh issue comment ${ISSUE_NUMBER} --body "${MESSAGE}"; then
            echo "Failed to add comment using GitHub CLI"
            exit 1
          fi
        else
          # Fall back to curl API call if GitHub CLI not available
          echo "Debug: Using curl to add comment"
          COMMENT_JSON=$(jq -n --arg body "${MESSAGE}" '{"body": $body}')
          REPO=$(echo $GITHUB_REPOSITORY)
          ISSUE_NUMBER="${{ inputs.issue-number }}"
          
          if [ -z "${ISSUE_NUMBER}" ]; then
            echo "Error: Missing issue number, cannot add comment"
            exit 1
          fi
          
          echo "Debug: Posting to https://api.github.com/repos/${REPO}/issues/${ISSUE_NUMBER}/comments"
          if ! curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -d "${COMMENT_JSON}" \
            "https://api.github.com/repos/${REPO}/issues/${ISSUE_NUMBER}/comments"; then
            echo "Failed to add comment using API"
            exit 1
          fi
        fi
        
        echo "Successfully updated issue #${{ inputs.issue-number }} with status: ${{ inputs.status }}"
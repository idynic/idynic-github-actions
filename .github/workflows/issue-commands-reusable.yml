name: Issue Commands Reusable Workflow

on:
  workflow_call:
    inputs:
      command_name:
        description: 'The command to handle (e.g., start)'
        type: string
        required: true
      issue_number:
        description: 'The issue number'
        type: number
        required: true
    secrets:
      token:
        required: true

jobs:
  handle-command:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Add debug output
        run: |
          echo "Repository: ${{ github.repository }}"
          echo "Issue Number: ${{ inputs.issue_number }}"
          echo "Command: ${{ inputs.command_name }}"

      # Create branch with timestamp
      - name: Create branch for issue
        if: inputs.command_name == 'start'
        run: |
          # Create a branch name from the issue number and a timestamp
          BRANCH_NAME="issue-${{ inputs.issue_number }}-$(date +%s)"
          
          # Create and push the branch
          git checkout -b "$BRANCH_NAME"
          git push origin "$BRANCH_NAME"
          
          echo "Created branch: $BRANCH_NAME"
          
          # Comment on the issue with information about the branch
          gh issue comment ${{ inputs.issue_number }} --body "✅ Created and pushed branch: \`$BRANCH_NAME\`  
          
          To start working:
          \`\`\`bash
          git fetch origin
          git checkout $BRANCH_NAME
          \`\`\`"
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
          
      # Update issue status based on command
      - name: Update issue status
        run: |
          STATUS=""
          case "${{ inputs.command_name }}" in
            start)
              STATUS="In Progress"
              ;;
            review)
              STATUS="Waiting for Review"
              ;;
            done)
              STATUS="Done"
              ;;
            *)
              STATUS="Updated"
              ;;
          esac
          
          gh issue comment ${{ inputs.issue_number }} --body "✅ Issue status updated to: **$STATUS**"
        env:
          GITHUB_TOKEN: ${{ secrets.token }}